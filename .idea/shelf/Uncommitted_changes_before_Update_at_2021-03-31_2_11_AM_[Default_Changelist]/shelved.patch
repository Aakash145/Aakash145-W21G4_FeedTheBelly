Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.foodrescue\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher_round\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.FoodRescue\">\r\n        <activity android:name=\".List_Of_Donated_Items\"></activity>\r\n        <activity android:name=\".Restaurants_List_Recycler\" />\r\n        <activity android:name=\".PaymentDetails\" />\r\n        <activity android:name=\".PaypalPayment\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyCIjIbOPQLA_ilI6xF74E--vkRJfK_SU9s\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n\r\n        <activity android:name=\".GoogleMapsActivity\" />\r\n        <activity android:name=\".NGO_Add_Items\" />\r\n        <activity android:name=\".recyclerView_NGO\" />\r\n        <activity android:name=\".Ngo_profile\" />\r\n        <activity android:name=\".restaurant_profile\" />\r\n        <activity android:name=\".login_Activity_ngo\" />\r\n        <activity android:name=\".Login_Activity_Rest\" />\r\n        <activity android:name=\".NGO_Dashboard\" />\r\n        <activity android:name=\".Restaurant_Dashboard\" />\r\n        <activity android:name=\".recyclerViewActivity_Restaurant\" />\r\n        <activity android:name=\".Restaurant_starter\" />\r\n        <activity android:name=\".NGO_Activity\" />\r\n        <activity android:name=\".Regestration_Restauarant\" />\r\n        <activity android:name=\".RegisterationActivity\" />\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:theme=\"@style/SplashScreen\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:theme=\"@style/Theme.FoodRescue\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 34cbd0c6e6079292ce79a982b081738f34fb7913)
+++ app/src/main/AndroidManifest.xml	(date 1617174557806)
@@ -14,7 +14,7 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.FoodRescue">
-        <activity android:name=".List_Of_Donated_Items"></activity>
+        <activity android:name=".List_Of_Donated_Items" />
         <activity android:name=".Restaurants_List_Recycler" />
         <activity android:name=".PaymentDetails" />
         <activity android:name=".PaypalPayment" />
@@ -40,14 +40,17 @@
         <activity android:name=".NGO_Activity" />
         <activity android:name=".Regestration_Restauarant" />
         <activity android:name=".RegisterationActivity" />
-        <activity
-            android:name=".SplashActivity"
-            android:theme="@style/SplashScreen">
+        <activity android:name=".Intro_Pages">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
+        </activity>
+        <activity
+            android:name=".SplashActivity"
+            android:theme="@style/SplashScreen">
+
         </activity>
         <activity
             android:name=".MainActivity"
Index: app/src/main/java/com/example/foodrescue/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodrescue;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class SplashActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        startActivity(new Intent(SplashActivity.this, MainActivity.class));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/foodrescue/SplashActivity.java	(revision 34cbd0c6e6079292ce79a982b081738f34fb7913)
+++ app/src/main/java/com/example/foodrescue/SplashActivity.java	(date 1617174675740)
@@ -6,6 +6,8 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
+import java.util.Timer;
+
 public class SplashActivity extends AppCompatActivity {
 
     @Override
@@ -13,5 +15,6 @@
         super.onCreate(savedInstanceState);
 
         startActivity(new Intent(SplashActivity.this, MainActivity.class));
+
     }
 }
Index: app/src/main/java/com/example/foodrescue/List_Of_Donated_Items.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodrescue;\r\n\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class List_Of_Donated_Items extends AppCompatActivity {\r\n    SQLiteDatabase FeedTheBelly;\r\n    RecyclerView rvItems;\r\n    ArrayList<String> foodName;\r\n    ArrayList<String> weight;\r\n    ArrayList<String> plates;\r\n    ArrayList<String> emails;\r\n    ArrayList<String> addresses;\r\n    DatabaseHelper myDb;\r\n    Button nextClick;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_list__of__donated__items);\r\n        myDb = new DatabaseHelper(this);\r\n        ActionBar myActionBar=getSupportActionBar();\r\n        myActionBar.setTitle(\"Donations List\");\r\n\r\n        rvItems=findViewById(R.id.rvDonateItem);\r\n        nextClick=findViewById(R.id.btnNext);\r\n        rvItems.setLayoutManager(new LinearLayoutManager(this));\r\n        foodName=new ArrayList<>();\r\n        weight=new ArrayList<>();\r\n        plates=new ArrayList<>();\r\n        String email=getIntent().getStringExtra(\"EMAIL\");\r\n        String address2=getIntent().getStringExtra(\"ADDRESS\");\r\n       // String name=getIntent().getStringExtra(\"NAME\");\r\n        String exp=getIntent().getStringExtra(\"EXPIRY\");\r\n        Cursor cursor=myDb.readDishes(email,exp);\r\n        while(cursor.moveToNext()){\r\n\r\n            try {\r\n                foodName.add(cursor.getString(0));\r\n                weight.add(cursor.getString(1));\r\n                plates.add(cursor.getString(2));\r\n                //addresses.add(address2);\r\n\r\n\r\n            }catch(Exception e){\r\n                Log.d(\"Error\",e.getMessage());\r\n            }\r\n        }\r\n        List_of_Donated_Items_Adapter myAdapter = new List_of_Donated_Items_Adapter(List_Of_Donated_Items.this, foodName, weight, plates,address2,email,exp);\r\n        rvItems.setAdapter(myAdapter);\r\n        nextClick=findViewById(R.id.btnNext);\r\n        nextClick.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(List_Of_Donated_Items.this,GoogleMapsActivity.class);\r\n                intent.putExtra(\"ADDRESSES\",address2);\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/foodrescue/List_Of_Donated_Items.java	(revision 34cbd0c6e6079292ce79a982b081738f34fb7913)
+++ app/src/main/java/com/example/foodrescue/List_Of_Donated_Items.java	(date 1617159571724)
@@ -66,6 +66,8 @@
             public void onClick(View v) {
                 Intent intent=new Intent(List_Of_Donated_Items.this,GoogleMapsActivity.class);
                 intent.putExtra("ADDRESSES",address2);
+                intent.putExtra("EMAIL",email);
+                intent.putExtra("EXPIRYDATE",exp);
                 startActivity(intent);
 
             }
Index: app/src/main/java/com/example/foodrescue/GoogleMapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodrescue;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.Manifest;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Camera;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\n\r\npublic class GoogleMapsActivity extends AppCompatActivity implements OnMapReadyCallback {\r\n\r\n\r\n    private static final String FINE_LOCATION = Manifest.permission.ACCESS_FINE_LOCATION;\r\n    private static final String COURSE_LOCATION = Manifest.permission.ACCESS_COARSE_LOCATION;\r\n    private static final int LOCATION_PERMISSION_REQUEST = 1234;\r\n    private static final float DEFAULT_ZOOM = 15;\r\n    private FusedLocationProviderClient mFusedLocationProviderClient;\r\n\r\n    private GoogleMap mMap;\r\n    TextView address;\r\n\r\n    private Boolean mLocationPermissionGranted = false;\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        //Toast.makeText(this, \"Map is Ready\", Toast.LENGTH_SHORT).show();\r\n        Log.d(\"Check Services\", \"Map is ready\");\r\n        mMap = googleMap;\r\n        //Adding addresses\r\n        address=findViewById(R.id.idRestInfo);\r\n        String street=getIntent().getStringExtra(\"ADDRESSES\");\r\n        getLocationFromAddress(street);\r\n        address.setText(\"Address: \"+street);\r\n    }\r\n\r\n    public void getLocationFromAddress(String strAddress)\r\n    {\r\n        Geocoder coder = new Geocoder(this);\r\n        List<Address> address;\r\n\r\n        try {\r\n            //Get latLng from String\r\n            address = coder.getFromLocationName(strAddress,5);\r\n\r\n            //check for null\r\n            if (address == null) {\r\n                return;\r\n            }\r\n\r\n            //Getting the first possibility\r\n            Address location=address.get(0);\r\n            LatLng latLng = new LatLng(location.getLatitude(), location.getLongitude());\r\n            Log.d(\"Changed\", \"Added Address\");\r\n            //Put marker on map on that LatLng\r\n            mMap.addMarker(new MarkerOptions().position(latLng).title(\"Destination\")).setIcon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));\r\n\r\n            CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                    .target(latLng)\r\n                    .zoom(15)\r\n                    .build();\r\n            CameraUpdate update = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n            mMap.animateCamera(update);\r\n\r\n//            mMap.getUiSettings().setZoomControlsEnabled(true);\r\n//            mMap.animateCamera(CameraUpdateFactory.zoomTo(15));\r\n//            //Animate and Zoom on that map location\r\n//            mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));\r\n\r\n\r\n\r\n            Log.d(\"Changed\", \"Changed Address\");\r\n        } catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_google_maps);\r\n        initMap();\r\n\r\n    }\r\n\r\n\r\n    private void initMap(){\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);\r\n        mapFragment.getMapAsync(GoogleMapsActivity.this);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/foodrescue/GoogleMapsActivity.java	(revision 34cbd0c6e6079292ce79a982b081738f34fb7913)
+++ app/src/main/java/com/example/foodrescue/GoogleMapsActivity.java	(date 1617159571835)
@@ -13,6 +13,8 @@
 import android.location.Location;
 import android.os.Bundle;
 import android.util.Log;
+import android.view.View;
+import android.widget.Button;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -45,6 +47,7 @@
 
     private GoogleMap mMap;
     TextView address;
+    Button approve;
 
     private Boolean mLocationPermissionGranted = false;
 
@@ -55,6 +58,7 @@
         mMap = googleMap;
         //Adding addresses
         address=findViewById(R.id.idRestInfo);
+        approve=findViewById(R.id.idAcceptOrder);
         String street=getIntent().getStringExtra("ADDRESSES");
         getLocationFromAddress(street);
         address.setText("Address: "+street);
@@ -100,8 +104,13 @@
         {
             e.printStackTrace();
         }
+        approve.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
     }
-
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
Index: app/src/main/java/com/example/foodrescue/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodrescue;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\n/**SELECT *  FROM User_table JOIN donations ON User_table.userEmail=donations.emailID\r\n WHERE expDate IN (SELECT A.expDate FROM donations A, donations B\r\n WHERE A.emailID=B.emailID\r\n AND A.expDate=B.expDate);\r\n * Created by ProgrammingKnowledge on 4/3/2015.\r\n */\r\npublic class DatabaseHelper extends SQLiteOpenHelper {\r\n    private static final String dbname=\"FeedTheBelly\";\r\n    public static final String TABLE_NAME = \"User_table\";\r\n    public static final String TABLE_NAME1 = \"User_ngo_table\";\r\n    private static final String COLUMN_USER_ID=\"userID\";\r\n    private static final String COLUMN_USER_NAME=\"userName\";\r\n    private static final String COLUMN_USER_EMAIL=\"userEmail\";\r\n    private static final String COLUMN_USER_PHONE=\"userPhone\";\r\n    private static final String COLUMN_USER_ADDRESS=\"userAddress\";\r\n    private static final String COLUMN_USER_CITY=\"userCity\";\r\n    private static final String COLUMN_USER_STATE=\"userState\";\r\n    private static final String COLUMN_USER_COUNTRY=\"userCountry\";\r\n    private static final String COLUMN_USER_POSTAL=\"userPostal\";\r\n\r\n    private static final String COLUMN_USER_ID1=\"userID1\";\r\n    private static final String COLUMN_USER_NAME1=\"userName1\";\r\n    private static final String COLUMN_USER_EMAIL1=\"userEmail1\";\r\n    private static final String COLUMN_USER_PHONE1=\"userPhone1\";\r\n    private static final String COLUMN_USER_ADDRESS1=\"userAddress1\";\r\n    private static final String COLUMN_USER_CITY1=\"userCity1\";\r\n    private static final String COLUMN_USER_STATE1=\"userState1\";\r\n    private static final String COLUMN_USER_COUNTRY1=\"userCountry1\";\r\n    private static final String COLUMN_USER_POSTAL1=\"userPostal1\";\r\n    private static final String COLUMN_USER_DESC1=\"userDesc1\";\r\n\r\n    public DatabaseHelper(Context context) {\r\n        super(context, dbname, null, 1);\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        String setPragmaForeignKeysOn = \"PRAGMA foreign_keys=ON;\";\r\n        String createDishesTable = \"CREATE TABLE dishes \" +\r\n                \"(dishID INTEGER, \" +\r\n                \"emailID TEXT,\"+\r\n                \"cuisineType TEXT, \" +\r\n                \"foodCategory TEXT,\" +\r\n                \"expDate TEXT, \" +\r\n                \"name TEXT, \" +\r\n                \"plates INTEGER, \" +\r\n                \"weight DOUBLE, \" +\r\n                \"PRIMARY KEY (name,emailID));\";\r\n\r\n        String createDonationsTable = \"CREATE TABLE donations \" +\r\n                \"(dishID INTEGER, \" +\r\n                \"emailID TEXT,\"+\r\n                \"cuisineType TEXT, \" +\r\n                \"foodCategory TEXT,\" +\r\n                \"expDate TEXT, \" +\r\n                \"name TEXT, \" +\r\n                \"plates INTEGER, \" +\r\n                \"weight DOUBLE, \" +\r\n                \"PRIMARY KEY (name,emailID,expDate),\" +\r\n                \"FOREIGN KEY(emailID) REFERENCES dishes(emailID),\" +\r\n                \"FOREIGN KEY(name) REFERENCES dishes(name),\" +\r\n                \"FOREIGN KEY(expDate) REFERENCES dishes(expDate));\";\r\n\r\n        String restaurant_users=\"create table \" + TABLE_NAME +\"(userEmail TEXT PRIMARY KEY, \" +\r\n                \"userName TEXT,\" +\r\n                \"userPhone  TEXT,\" +\r\n                \"userID TEXT, \" +\r\n                \"userAddress TEXT,\" +\r\n                \"userCity TEXT,\" +\r\n                \"userState TEXT,\" +\r\n                \"userCountry TEXT,\" +\r\n                \"userPostal TEXT\" + \");\";\r\n\r\n        String ngo_users=\"create table \" + TABLE_NAME1 + \"(userEmail1 TEXT PRIMARY KEY, \" +\r\n                \"userName1 TEXT,\" +\r\n                \"userPhone1  TEXT,\" +\r\n                \"userID1 TEXT, \" +\r\n                \"userDesc1 TEXT,\" +\r\n                \"userAddress1 TEXT,\" +\r\n                \"userCity1 TEXT,\" +\r\n                \"userState1 TEXT,\" +\r\n                \"userCountry1 TEXT,\" +\r\n                \"userPostal1 TEXT\" + \");\";\r\n\r\n        db.execSQL(setPragmaForeignKeysOn);\r\n        db.execSQL(createDonationsTable);\r\n        db.execSQL(createDishesTable);\r\n        db.execSQL(restaurant_users);\r\n        db.execSQL(ngo_users);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n        db.execSQL(\"DROP TABLE IF EXISTS \"+TABLE_NAME);\r\n        String dropDishesTable = \"DROP TABLE IF EXISTS \" + \"dishes;\";\r\n        String droptable1 = \"DROP TABLE IF EXISTS \" + \"User_table;\";\r\n        String droptable2 = \"DROP TABLE IF EXISTS \" + \"User_ngo_table;\";\r\n        String droptable3 = \"DROP TABLE IF EXISTS \" + \"donations;\";\r\n\r\n        db.execSQL(dropDishesTable);\r\n        db.execSQL(droptable1);\r\n        db.execSQL(droptable2);\r\n        db.execSQL(droptable3);\r\n        onCreate(db);\r\n    }\r\n\r\n    public boolean insertData(String email,String name,String phone, String id, String address, String city, String state, String country, String postal){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_USER_EMAIL, email);\r\n        values.put(COLUMN_USER_NAME, name);\r\n        values.put(COLUMN_USER_PHONE, phone);\r\n        values.put(COLUMN_USER_ID, id);\r\n        values.put(COLUMN_USER_ADDRESS, address );\r\n        values.put(COLUMN_USER_CITY, city);\r\n        values.put(COLUMN_USER_STATE, state);\r\n        values.put(COLUMN_USER_COUNTRY, country);\r\n        values.put(COLUMN_USER_POSTAL, postal);\r\n        long result = db.insert(TABLE_NAME,null ,values);\r\n        if(result == -1)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n\r\n    public boolean insertData1(String email1,String name1, String phone1, String id1, String desc1, String address1, String city1, String state1, String country1, String postal1){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_USER_EMAIL1, email1);\r\n        values.put(COLUMN_USER_NAME1, name1);\r\n        values.put(COLUMN_USER_PHONE1, phone1);\r\n        values.put(COLUMN_USER_ID1, id1);\r\n        values.put(COLUMN_USER_DESC1, desc1);\r\n        values.put(COLUMN_USER_ADDRESS1, address1 );\r\n        values.put(COLUMN_USER_CITY1, city1);\r\n        values.put(COLUMN_USER_STATE1, state1);\r\n        values.put(COLUMN_USER_COUNTRY1, country1);\r\n        values.put(COLUMN_USER_POSTAL1, postal1);\r\n        long result = db.insert(TABLE_NAME1,null ,values);\r\n        if(result == -1)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n\r\n    public Cursor getAllData() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        Cursor res = db.rawQuery(\"select * from \"+TABLE_NAME, null);\r\n        return res;\r\n    }\r\n    public Cursor getAllData1() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        Cursor res = db.rawQuery(\"select * from \"+TABLE_NAME1, null);\r\n        return res;\r\n    }\r\n\r\n    public boolean updateData(String email,String name,String phone, String id, String address, String city, String state, String country, String postal) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_USER_EMAIL, email);\r\n        values.put(COLUMN_USER_NAME, name);\r\n        values.put(COLUMN_USER_PHONE, phone);\r\n        values.put(COLUMN_USER_ID, id);\r\n        values.put(COLUMN_USER_ADDRESS, address );\r\n        values.put(COLUMN_USER_CITY, city);\r\n        values.put(COLUMN_USER_STATE, state);\r\n        values.put(COLUMN_USER_COUNTRY, country);\r\n        values.put(COLUMN_USER_POSTAL, postal);\r\n        db.update(TABLE_NAME, values, \"Email = ?\",new String[] { email });\r\n        return true;\r\n    }\r\n    public boolean updateData1(String email1,String name1, String phone1, String id1, String desc1,String address1, String city1, String state1, String country1, String postal1){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_USER_EMAIL1, email1);\r\n        values.put(COLUMN_USER_NAME1, name1);\r\n        values.put(COLUMN_USER_PHONE1, phone1);\r\n        values.put(COLUMN_USER_ID1, id1);\r\n        values.put(COLUMN_USER_DESC1, desc1);\r\n        values.put(COLUMN_USER_ADDRESS1, address1 );\r\n        values.put(COLUMN_USER_CITY1, city1);\r\n        values.put(COLUMN_USER_STATE1, state1);\r\n        values.put(COLUMN_USER_COUNTRY1, country1);\r\n        values.put(COLUMN_USER_POSTAL1, postal1);\r\n        db.update(TABLE_NAME1, values, \"Email = ?\",new String[] { email1 });\r\n        return true;\r\n    }\r\n\r\n    public Integer deleteData (String email) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        return db.delete(TABLE_NAME, \"Email = ?\",new String[] { email });\r\n    }\r\n\r\n\r\n    public Integer deleteData1 (String email1) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        return db.delete(TABLE_NAME1, \"Email = ?\",new String[] { email1 });\r\n    }\r\n    public String addNewDish(Dishes dish,String emailID, int id, Spinner spinner, Spinner spinner2, EditText expiryDate){\r\n        SQLiteDatabase db=this.getWritableDatabase();\r\n        long result;\r\n        ContentValues val = new ContentValues();\r\n        val.put(\"dishID\", id);\r\n        val.put(\"emailID\", emailID);\r\n        val.put(\"cuisineType\", spinner.getSelectedItem().toString());\r\n        val.put(\"foodCategory\", spinner2.getSelectedItem().toString());\r\n        val.put(\"expDate\", expiryDate.getText().toString());\r\n        val.put(\"name\", dish.getDishName());\r\n        val.put(\"plates\", dish.getNoOfPlates());\r\n        val.put(\"weight\", dish.getWeight());\r\n        result=db.insert(\"dishes\",null,val);\r\n        if(result==-1)\r\n            return \"Failed\";\r\n        else\r\n            return \"Successfully inserted\";\r\n    }\r\n\r\n    public String addDonation(String emailID,String plates, String weight, String name, String dishID, String cType, String fType, String expiryDate){\r\n        SQLiteDatabase db=this.getWritableDatabase();\r\n        long result;\r\n        ContentValues val = new ContentValues();\r\n        val.put(\"dishID\", dishID);\r\n        val.put(\"emailID\", emailID);\r\n        val.put(\"cuisineType\", cType);\r\n        val.put(\"foodCategory\",fType);\r\n        val.put(\"expDate\", expiryDate);\r\n        val.put(\"name\", name);\r\n        val.put(\"plates\", plates);\r\n        val.put(\"weight\", weight);\r\n        result=db.insert(\"donations\",null,val);\r\n        if(result==-1)\r\n            return \"Failed\";\r\n        else\r\n            return \"Successfully inserted\";\r\n    }\r\n\r\n\r\n\r\n    public Cursor readalldata()\r\n    {\r\n        SQLiteDatabase db=this.getWritableDatabase();\r\n        String qry=\"select * from dishes\";\r\n        Cursor cursor=db.rawQuery(qry,null);\r\n        return  cursor;\r\n    }\r\n\r\n    public Cursor readAllRestaurants()\r\n    {\r\n        SQLiteDatabase db=this.getWritableDatabase();\r\n        String qry=\"select * from User_table\";\r\n        Cursor cursor=db.rawQuery(qry,null);\r\n        return  cursor;\r\n    }\r\n\r\n    public Cursor readEmail(String email) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor res = db.rawQuery(\"select * from dishes where emailID= '\" + email + \"'\", null);\r\n        return res;\r\n    }\r\n\r\n    public void deleteAllDishesOfEachUser(String email){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        long s=db.delete(\"dishes\", \"emailID\" + \" = ?\",\r\n                new String[]{String.valueOf(email)});\r\n    }\r\n\r\n    public Cursor readDonations(String email) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        String queryStr = \"SELECT DISTINCT donations.foodCategory,donations.cuisineType,donations.expDate,User_table.userEmail FROM User_table JOIN donations \" +\r\n                            \"ON User_table.userEmail=donations.emailID\" +\r\n                            \" AND expDate IN (SELECT A.expDate FROM donations A, donations B\" +\r\n                                                \" WHERE A.emailID=B.emailID\" +\r\n                                                \" AND A.expDate=B.expDate)\" +\r\n                \"WHERE donations.emailID='\"+email+\"'\";\r\n        Cursor cursor=db.rawQuery(queryStr,null);\r\n        return  cursor;\r\n    }\r\n\r\n    public Cursor readDishes(String email,String exp) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        String queryStr = \"SELECT donations.name,donations.weight,donations.plates FROM User_table JOIN donations \" +\r\n                \"ON User_table.userEmail=donations.emailID \" +\r\n                \"AND expDate IN (SELECT A.expDate FROM donations A, donations B \" +\r\n                \"WHERE A.emailID=B.emailID \" +\r\n                \"AND A.expDate=B.expDate)\" +\r\n                \"WHERE donations.emailID= '\"+email+ \"'AND donations.expDate='\"+exp+\"';\";\r\n        Cursor cursor=db.rawQuery(queryStr,null);\r\n        return  cursor;\r\n    }\r\n\r\n    public Cursor readDonationItems(String email) {\r\n        SQLiteDatabase db = getReadableDatabase();\r\n        String queryStr = \"SELECT DISTINCT donation.name,User_table.userID,userName,donations.expDate FROM User_table JOIN donations \" +\r\n                \"ON User_table.userEmail=donations.emailID\" +\r\n                \" AND expDate IN (SELECT A.expDate FROM donations A, donations B\" +\r\n                \" WHERE A.emailID=B.emailID\" +\r\n                \" AND A.expDate=B.expDate)\" +\r\n                \"WHERE donations.emailID='\"+email+\"'\";\r\n        Cursor cursor=db.rawQuery(queryStr,null);\r\n        return  cursor;\r\n    }\r\n\r\n   /* public Cursor readDonationRestaurant() {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        String queryStr = \"SELECT *  FROM User_table JOIN donations \" +\r\n                \"ON User_table.userEmail=donations.emailID\" +\r\n                \" JOIN (SELECT DISTINCT A.expDate date,A.emailID email FROM donations A, donations B\" +\r\n                \" WHERE A.emailID=B.emailID\" +\r\n                \" AND A.expDate=B.expDate)\" +\r\n                \"ON email=donations.emailID;\";\r\n        Cursor cursor=db.rawQuery(queryStr,null);\r\n        return  cursor;\r\n    }\r\n\r\n    public Cursor getUser(String Email){\r\n          SQLiteDatabase db = this.getReadableDatabase();\r\n          String sql = \"SELECT * FROM \" + TABLE_NAME\r\n                  + \" WHERE \" + COLUMN_USER_EMAIL + \" = \" + Email;\r\n          Cursor cursor = db.rawQuery(sql,new String[]{Email});\r\n\r\n          return  cursor;\r\n      }*/\r\n    public Cursor getData(String email) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor res =  db.rawQuery( \"select * from user_table where userEmail= '\"+email+\"'\", null );\r\n        return res;\r\n    }\r\n\r\n    //SELECT  * FROM donations A, donations B\r\n    //WHERE  A.emailID=B.emailID\r\n    // AND A.expDate=B.expDate\r\n    public Cursor getData1(String email) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor res =  db.rawQuery( \"select * from User_ngo_table where userEmail1= '\"+email+\"'\", null );\r\n        return res;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/foodrescue/DatabaseHelper.java	(revision 34cbd0c6e6079292ce79a982b081738f34fb7913)
+++ app/src/main/java/com/example/foodrescue/DatabaseHelper.java	(date 1617159571981)
@@ -278,6 +278,12 @@
                 new String[]{String.valueOf(email)});
     }
 
+    public void deleteConfirmedRecord(String email){
+        SQLiteDatabase db = this.getWritableDatabase();
+        long s=db.delete("dishes", "emailID" + " = ?",
+                new String[]{String.valueOf(email)});
+    }
+
     public Cursor readDonations(String email) {
         SQLiteDatabase db = this.getReadableDatabase();
         String queryStr = "SELECT DISTINCT donations.foodCategory,donations.cuisineType,donations.expDate,User_table.userEmail FROM User_table JOIN donations " +
